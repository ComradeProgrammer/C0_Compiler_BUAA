int x
int q
int mod()
para int x
para int y
q = x / y
#TMP3 = q * y
#TMP4 = x - #TMP3
ret #TMP4
int i
int isPrime()
para int x
#TMP5 = x == 2
BZ #TMP5 _label2
ret 1
GOTO _label3
_label2: i=3
#TMP6 = i < x
GOTO _label5
_label4: #TMP10=x
#TMP11=i
#TMP9 = #TMP10 / #TMP11
#TMP12 = #TMP9 * #TMP11
#TMP13 = #TMP10 - #TMP12
#TMP8=#TMP13
#TMP7=#TMP8
BNZ #TMP7 _label6
ret 0
_label6: i = i + 1
_label5: #TMP6 = i < x
BNZ #TMP6 _label4
_label3: ret 1
int i
int loop
void fenjie()
para int x
loop=1
i=2
syscall-4 the prime factors of 
syscall-1 x
syscall-11 10
GOTO _label8
_label7: #TMP14 = x == 1
BZ #TMP14 _label9
ret 
_label9: push i
call isPrime
#TMP15=RET
BZ #TMP15 _label10
#TMP19=x
#TMP20=i
#TMP18 = #TMP19 / #TMP20
#TMP21 = #TMP18 * #TMP20
#TMP22 = #TMP19 - #TMP21
#TMP17=#TMP22
#TMP16=#TMP17
BNZ #TMP16 _label11
syscall-1 i
syscall-11 10
x = x / i
i=2
GOTO _label12
_label11: i = i + 1
_label12: GOTO _label8
_label10: i = i + 1
_label8: BNZ loop _label7
ret 
void main()
x=0
#TMP26 = x != -1
GOTO _label15
_label14: syscall-4 input the number
syscall-11 10
x = syscall-5 
#TMP27 = x != -1
BZ #TMP27 _label15
push x
call fenjie
_label15: #TMP26 = x != -1
BNZ #TMP26 _label14

====Block0====
int mod()
para int x
para int y
#TMP4 = x mod y
ret #TMP4
	prev:[]
	next:[]
	use:[x,y,]
	def:[#TMP4,]
	activeIn:[x,y,]
	activeOut:[]
==============
====Block1====
int isPrime()
para int x
#TMP5 = x == 2
BZ #TMP5 _label2
	prev:[]
	next:[2,4,]
	use:[x,]
	def:[#TMP5,]
	activeIn:[x,]
	activeOut:[x,]
==============
====Block2====
ret 1
	prev:[1,]
	next:[]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block3====
GOTO _label3
	prev:[]
	next:[9,]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block4====
_label2: i=3
GOTO _label5
	prev:[1,]
	next:[8,]
	use:[]
	def:[i,]
	activeIn:[x,]
	activeOut:[x,i,]
==============
====Block5====
_label4: #TMP7 = x mod i
BNZ #TMP7 _label6
	prev:[8,]
	next:[6,7,]
	use:[x,i,]
	def:[#TMP7,]
	activeIn:[x,i,]
	activeOut:[x,i,]
==============
====Block6====
ret 0
	prev:[5,]
	next:[]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block7====
_label6: i = i + 1
	prev:[5,]
	next:[8,]
	use:[i,]
	def:[]
	activeIn:[x,i,]
	activeOut:[x,i,]
==============
====Block8====
_label5: #TMP6 = i < x
BNZ #TMP6 _label4
	prev:[7,4,]
	next:[9,5,]
	use:[x,i,]
	def:[#TMP6,]
	activeIn:[x,i,]
	activeOut:[x,i,]
==============
====Block9====
_label3: ret 1
	prev:[8,3,]
	next:[]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block10====
void fenjie()
para int x
syscall-4 the prime factors of 
syscall-1 x
syscall-11 10
loop=1
i=2
GOTO _label8
	prev:[]
	next:[20,]
	use:[x,]
	def:[loop,i,]
	activeIn:[x,]
	activeOut:[x,loop,i,]
==============
====Block11====
_label7: #TMP14 = x == 1
BZ #TMP14 _label9
	prev:[20,]
	next:[12,13,]
	use:[x,]
	def:[#TMP14,]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block12====
ret 
	prev:[11,]
	next:[]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block13====
_label9: push i
call isPrime
	prev:[11,]
	next:[14,]
	use:[i,]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block14====
#TMP15=RET
BZ #TMP15 _label10
	prev:[13,]
	next:[15,19,]
	use:[]
	def:[#TMP15,]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block15====
#TMP16 = x mod i
BNZ #TMP16 _label11
	prev:[14,]
	next:[16,17,]
	use:[x,i,]
	def:[#TMP16,]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block16====
syscall-1 i
syscall-11 10
x = x / i
i=2
GOTO _label12
	prev:[15,]
	next:[18,]
	use:[x,i,]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block17====
_label11: i = i + 1
	prev:[15,]
	next:[18,]
	use:[i,]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block18====
_label12: GOTO _label8
	prev:[17,16,]
	next:[20,]
	use:[]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block19====
_label10: i = i + 1
	prev:[14,]
	next:[20,]
	use:[i,]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block20====
_label8: BNZ loop _label7
	prev:[19,10,18,]
	next:[21,11,]
	use:[loop,]
	def:[]
	activeIn:[x,loop,i,]
	activeOut:[x,loop,i,]
==============
====Block21====
ret 
	prev:[20,]
	next:[]
	use:[]
	def:[]
	activeIn:[]
	activeOut:[]
==============
====Block22====
void main()
x=0
GOTO _label15
	prev:[]
	next:[26,]
	use:[]
	def:[x,]
	activeIn:[]
	activeOut:[x,]
==============
====Block23====
_label14: syscall-4 input the number
syscall-11 10
x = syscall-5 
	prev:[26,]
	next:[24,]
	use:[]
	def:[x,]
	activeIn:[]
	activeOut:[x,]
==============
====Block24====
#TMP27 = x != -1
BZ #TMP27 _label15
	prev:[23,]
	next:[25,26,]
	use:[x,]
	def:[#TMP27,]
	activeIn:[x,]
	activeOut:[x,]
==============
====Block25====
push x
call fenjie
	prev:[24,]
	next:[26,]
	use:[x,]
	def:[]
	activeIn:[x,]
	activeOut:[x,]
==============
====Block26====
_label15: #TMP26 = x != -1
BNZ #TMP26 _label14
	prev:[25,22,24,]
	next:[23,]
	use:[x,]
	def:[#TMP26,]
	activeIn:[x,]
	activeOut:[]
==============


int x
int q
int mod()
para int x
para int y
#TMP4 = x mod y
ret #TMP4
int i
int isPrime()
para int x
#TMP5 = x == 2
BZ #TMP5 _label2
ret 1
GOTO _label3
_label2: i=3
GOTO _label5
_label4: #TMP7 = x mod i
BNZ #TMP7 _label6
ret 0
_label6: i = i + 1
_label5: #TMP6 = i < x
BNZ #TMP6 _label4
_label3: ret 1
int i
int loop
void fenjie()
para int x
syscall-4 the prime factors of 
syscall-1 x
syscall-11 10
loop=1
i=2
GOTO _label8
_label7: #TMP14 = x == 1
BZ #TMP14 _label9
ret 
_label9: push i
call isPrime
#TMP15=RET
BZ #TMP15 _label10
#TMP16 = x mod i
BNZ #TMP16 _label11
syscall-1 i
syscall-11 10
x = x / i
i=2
GOTO _label12
_label11: i = i + 1
_label12: GOTO _label8
_label10: i = i + 1
_label8: BNZ loop _label7
ret 
void main()
x=0
GOTO _label15
_label14: syscall-4 input the number
syscall-11 10
x = syscall-5 
#TMP27 = x != -1
BZ #TMP27 _label15
push x
call fenjie
_label15: #TMP26 = x != -1
BNZ #TMP26 _label14


global:
name:fenjie	id:8	type:function	scope:	addr:-1	dimension:0
link:		returnType:void	paraNum:1	paras:[9 ]
name:isPrime	id:5	type:function	scope:	addr:-1	dimension:0
link:		returnType:int	paraNum:1	paras:[6 ]
name:main	id:12	type:function	scope:	addr:-1	dimension:0
link:		returnType:void	paraNum:0	paras:[]
name:mod	id:1	type:function	scope:	addr:-1	dimension:0
link:		returnType:int	paraNum:2	paras:[2 3 ]
name:x	id:0	type:int	scope:	addr:0	dimension:0link:NULL
fenjie:
name:i	id:11	type:int	scope:fenjie	addr:12	dimension:0link:NULL
name:loop	id:10	type:int	scope:fenjie	addr:16	dimension:0link:NULL
name:x	id:9	type:int	scope:fenjie	addr:56	dimension:0link:NULL
tmp16 addr:0
tmp15 addr:4
tmp14 addr:8
isPrime:
name:i	id:7	type:int	scope:isPrime	addr:12	dimension:0link:NULL
name:x	id:6	type:int	scope:isPrime	addr:52	dimension:0link:NULL
tmp7 addr:0
tmp6 addr:4
tmp5 addr:8
main:
tmp27 addr:0
tmp26 addr:4
mod:
name:q	id:4	type:int	scope:mod	addr:4	dimension:0link:NULL
name:x	id:2	type:int	scope:mod	addr:44	dimension:0link:NULL
name:y	id:3	type:int	scope:mod	addr:48	dimension:0link:NULL
tmp4 addr:0


