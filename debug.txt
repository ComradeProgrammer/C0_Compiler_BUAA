int d
int e
int a
int b
int c
int inline_func()
para int x
para int y
para int z
c = d + e
#TMP3 = x + y
#TMP4 = #TMP3 + z
#TMP5 = #TMP4 + c
ret #TMP5
void main()
d=1
e=3
#TMP11=1
#TMP12=2
#TMP13=3
#TMP10 = d + e
#TMP14 = #TMP11 + #TMP12
#TMP15 = #TMP14 + #TMP13
#TMP16 = #TMP15 + #TMP10
#TMP7=#TMP16
#TMP6=#TMP7
syscall-1 #TMP6
syscall-11 10

====Block0====
int inline_func()
para int x
para int y
para int z
c = d + e
#TMP3 = x + y
#TMP4 = #TMP3 + z
#TMP5 = #TMP4 + c
ret #TMP5
	prev:[]
	next:[]
	use:[d,e,x,y,z,]
	def:[#TMP5,#TMP4,#TMP3,c,]
	activeIn:[d,e,x,y,z,]
	activeOut:[]
==============
====Block1====
void main()
#TMP10 = 1 + 3
#TMP14 = 1 + 2
#TMP15 = #TMP14 + 3
#TMP16 = #TMP15 + #TMP10
syscall-1 #TMP16
syscall-11 10
e=3
	prev:[]
	next:[]
	use:[]
	def:[#TMP16,#TMP15,#TMP14,#TMP10,e,]
	activeIn:[]
	activeOut:[]
==============


int d
int e
int a
int b
int c
int inline_func()
para int x
para int y
para int z
c = d + e
#TMP3 = x + y
#TMP4 = #TMP3 + z
#TMP5 = #TMP4 + c
ret #TMP5
void main()
#TMP10 = 1 + 3
#TMP14 = 1 + 2
#TMP15 = #TMP14 + 3
#TMP16 = #TMP15 + #TMP10
syscall-1 #TMP16
syscall-11 10
e=3


global:
name:d	id:0	type:int	scope:	addr:0	dimension:0link:NULL
name:e	id:1	type:int	scope:	addr:4	dimension:0link:NULL
name:inline_func	id:2	type:function	scope:	addr:-1	dimension:0
link:		returnType:int	paraNum:3	paras:[3 4 5 ]
name:main	id:9	type:function	scope:	addr:-1	dimension:0
link:		returnType:void	paraNum:0	paras:[]
inline_func:
name:a	id:6	type:int	scope:inline_func	addr:12	dimension:0link:NULL
name:b	id:7	type:int	scope:inline_func	addr:16	dimension:0link:NULL
name:c	id:8	type:int	scope:inline_func	addr:20	dimension:0link:NULL
name:x	id:3	type:int	scope:inline_func	addr:60	dimension:0link:NULL
name:y	id:4	type:int	scope:inline_func	addr:64	dimension:0link:NULL
name:z	id:5	type:int	scope:inline_func	addr:68	dimension:0link:NULL
tmp5 addr:0
tmp4 addr:4
tmp3 addr:8
main:
tmp16 addr:0
tmp15 addr:4
tmp14 addr:8
tmp10 addr:12


