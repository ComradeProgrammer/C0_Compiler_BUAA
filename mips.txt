.globl main
.data:
string$0: .asciiz "start"
string$1: .asciiz "length"
string$2: .asciiz ""
string$3: .asciiz "17373248"
string$4: .asciiz "n"
.align 2
arr: .space 4000
tmp: .space 4000
.text:
merge:
sw $ra,152($sp)#save the return value
sw $s0,120($sp)
sw $s1,124($sp)
sw $s2,128($sp)
sw $s3,132($sp)
sw $s4,136($sp)
sw $s5,140($sp)
sw $s6,144($sp)
sw $s7,148($sp)
li $s0,0
li $s1,0
move $s2,$a0#k=s1

label$2:
lw $t0,104($sp)#load variable#TMP2
slt $t0,$s0,$a1#_label2: #TMP2 = i < l1

blez $t0,label$10#BZ #TMP2 _label10

lw $t0,100($sp)#load variable#TMP3
slt $t0,$s1,$a3##TMP3 = j < l2

blez $t0,label$8#BZ #TMP3 _label8

lw $t0,88($sp)#load variable#TMP6
addu $t0,$a2,$s1##TMP6 = s2 + j

lw $t1,84($sp)#load variable#TMP7
sll $t2,$t0,2
lw $t1,arr($t2)
##TMP7 = arr [ #TMP6 ] 

lw $t3,96($sp)#load variable#TMP4
addu $t3,$a0,$s0##TMP4 = s1 + i

lw $t4,92($sp)#load variable#TMP5
sll $t5,$t3,2
lw $t4,arr($t5)
##TMP5 = arr [ #TMP4 ] 

lw $t6,80($sp)#load variable#TMP8
sgt $t6,$t4,$t1##TMP8 = #TMP5 > #TMP7

blez $t6,label$5#BZ #TMP8 _label5

lw $t0,28($sp)#load variable#TMP51
move $t0,$s1##TMP51=j

li $t1,1# load immediate1
addu $s1,$t0,$t1#j = #TMP51 + 1

lw $t2,76($sp)#load variable#TMP9
addu $t2,$a2,$t0##TMP9 = s2 + #TMP51

lw $t3,72($sp)#load variable#TMP10
sll $t4,$t2,2
lw $t3,arr($t4)
##TMP10 = arr [ #TMP9 ] 

sll $t5,$s2,2
sw $t3,tmp($t5)
#tmp[k] =#TMP10

j label$6#GOTO _label6

label$5:
lw $t0,24($sp)#load variable#TMP53
move $t0,$s0#_label5: #TMP53=i

li $t1,1# load immediate1
addu $s0,$t0,$t1#i = #TMP53 + 1

lw $t2,68($sp)#load variable#TMP12
addu $t2,$a0,$t0##TMP12 = s1 + #TMP53

lw $t3,64($sp)#load variable#TMP13
sll $t4,$t2,2
lw $t3,arr($t4)
##TMP13 = arr [ #TMP12 ] 

sll $t5,$s2,2
sw $t3,tmp($t5)
#tmp[k] =#TMP13

label$6:
lw $t0,20($sp)#load variable#TMP55
move $t0,$s2#_label6: #TMP55=k

li $t1,1# load immediate1
addu $s2,$t0,$t1#k = #TMP55 + 1

j label$7#GOTO _label7

label$8:
lw $t0,60($sp)#load variable#TMP16
slt $t0,$s0,$a1#_label8: #TMP16 = i < l1

blez $t0,label$7#BZ #TMP16 _label7

lw $t0,16($sp)#load variable#TMP58
move $t0,$s0##TMP58=i

lw $t1,12($sp)#load variable#TMP59
move $t1,$s2##TMP59=k

li $t2,1# load immediate1
addu $s0,$t0,$t2#i = #TMP58 + 1

li $t3,1# load immediate1
addu $s2,$t1,$t3#k = #TMP59 + 1

lw $t4,56($sp)#load variable#TMP17
addu $t4,$a0,$t0##TMP17 = s1 + #TMP58

lw $t5,52($sp)#load variable#TMP18
sll $t6,$t4,2
lw $t5,arr($t6)
##TMP18 = arr [ #TMP17 ] 

sll $t7,$t1,2
sw $t5,tmp($t7)
#tmp[#TMP59] =#TMP18

j label$8#GOTO _label8

label$7:
j label$2#_label7: GOTO _label2

label$10:
lw $t0,48($sp)#load variable#TMP21
slt $t0,$s1,$a3#_label10: #TMP21 = j < l2

blez $t0,label$11#BZ #TMP21 _label11

lw $t0,8($sp)#load variable#TMP63
move $t0,$s1##TMP63=j

lw $t1,4($sp)#load variable#TMP64
move $t1,$s2##TMP64=k

li $t2,1# load immediate1
addu $s1,$t0,$t2#j = #TMP63 + 1

li $t3,1# load immediate1
addu $s2,$t1,$t3#k = #TMP64 + 1

lw $t4,44($sp)#load variable#TMP22
addu $t4,$a2,$t0##TMP22 = s2 + #TMP63

lw $t5,40($sp)#load variable#TMP23
sll $t6,$t4,2
lw $t5,arr($t6)
##TMP23 = arr [ #TMP22 ] 

sll $t7,$t1,2
sw $t5,tmp($t7)
#tmp[#TMP64] =#TMP23

j label$10#GOTO _label10

label$11:
move $s0,$a0#_label11: i=s1

label$12:
lw $t0,36($sp)#load variable#TMP26
slt $t0,$s0,$s2#_label12: #TMP26 = i < k

blez $t0,label$13#BZ #TMP26 _label13

lw $t0,0($sp)#load variable#TMP68
move $t0,$s0##TMP68=i

li $t1,1# load immediate1
addu $s0,$t0,$t1#i = #TMP68 + 1

lw $t2,32($sp)#load variable#TMP27
sll $t3,$t0,2
lw $t2,tmp($t3)
##TMP27 = tmp [ #TMP68 ] 

sll $t4,$t0,2
sw $t2,arr($t4)
#arr[#TMP68] =#TMP27

j label$12#GOTO _label12

label$13:
lw $s0,120($sp)
lw $s1,124($sp)
lw $s2,128($sp)
lw $s3,132($sp)
lw $s4,136($sp)
lw $s5,140($sp)
lw $s6,144($sp)
lw $s7,148($sp)
lw $ra,152($sp)
addiu $sp,$sp,172
jr $ra
inner_merge_sort:
sw $ra,92($sp)#save the return value
sw $s0,60($sp)
sw $s1,64($sp)
sw $s2,68($sp)
sw $s3,72($sp)
sw $s4,76($sp)
sw $s5,80($sp)
sw $s6,84($sp)
sw $s7,88($sp)
lw $t0,48($sp)#load variable#TMP28
li $t1,1# load immediate1
sle $t0,$a1,$t1##TMP28 = length <= 1

sw $a0,96($sp)
la $a0,string$0
li $v0,4
syscall #printstring
lw $a0,96($sp)
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
la $a0,string$1
li $v0,4
syscall #printstring
move $a0,$a1
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
la $a0,string$2
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
blez $t0,label$14#BZ #TMP28 _label14

lw $s0,60($sp)
lw $s1,64($sp)
lw $s2,68($sp)
lw $s3,72($sp)
lw $s4,76($sp)
lw $s5,80($sp)
lw $s6,84($sp)
lw $s7,88($sp)
lw $ra,92($sp)
addiu $sp,$sp,104
jr $ra
label$14:
lw $t0,44($sp)#load variable#TMP29
lw $t1,100($sp)#load variablelength
li $t2,2# load immediate2
seq $t0,$t1,$t2#_label14: #TMP29 = length == 2

blez $t0,label$15#BZ #TMP29 _label15

lw $t0,36($sp)#load variable#TMP31
lw $t1,96($sp)#load variablestart
li $t2,1# load immediate1
addu $t0,$t1,$t2##TMP31 = start + 1

lw $t3,32($sp)#load variable#TMP32
sll $t4,$t0,2
lw $t3,arr($t4)
##TMP32 = arr [ #TMP31 ] 

lw $t5,40($sp)#load variable#TMP30
sll $t6,$t1,2
lw $t5,arr($t6)
##TMP30 = arr [ start ] 

lw $t7,28($sp)#load variable#TMP33
sgt $t7,$t5,$t3##TMP33 = #TMP30 > #TMP32

blez $t7,label$16#BZ #TMP33 _label16

lw $t0,24($sp)#load variable#TMP34
lw $t1,96($sp)#load variablestart
sll $t2,$t1,2
lw $t0,arr($t2)
##TMP34 = arr [ start ] 

lw $t3,16($sp)#load variable#TMP37
li $t4,1# load immediate1
addu $t3,$t1,$t4##TMP37 = start + 1

lw $t5,20($sp)#load variable#TMP36
sll $t6,$t3,2
lw $t5,arr($t6)
##TMP36 = arr [ #TMP37 ] 

sll $t7,$t1,2
sw $t5,arr($t7)
#arr[start] =#TMP36

sll $t8,$t3,2
sw $t0,arr($t8)
#arr[#TMP37] =#TMP34

label$16:
lw $s0,60($sp)
lw $s1,64($sp)
lw $s2,68($sp)
lw $s3,72($sp)
lw $s4,76($sp)
lw $s5,80($sp)
lw $s6,84($sp)
lw $s7,88($sp)
lw $ra,92($sp)
addiu $sp,$sp,104
jr $ra
label$15:
lw $t0,100($sp)#load variablelength
li $t1,2# load immediate2
div $t0,$t1
mflo $s0#_label15: mid = length / 2

lw $t2,96($sp)#load variablestart
sw $t2,-8($sp)
move $a0,$t2
sw $s0,-4($sp)
move $a1,$s0
addiu $sp,$sp,-104
jal inner_merge_sort
lw $t0,12($sp)#load variable#TMP39
lw $t1,96($sp)#load variablestart
addu $t0,$t1,$s0##TMP39 = start + mid

lw $t2,8($sp)#load variable#TMP40
lw $t3,100($sp)#load variablelength
subu $t2,$t3,$s0##TMP40 = length - mid

sw $t0,-8($sp)
move $a0,$t0
sw $t2,-4($sp)
move $a1,$t2
addiu $sp,$sp,-104
jal inner_merge_sort
lw $t0,4($sp)#load variable#TMP41
lw $t1,96($sp)#load variablestart
addu $t0,$t1,$s0##TMP41 = start + mid

lw $t2,0($sp)#load variable#TMP42
lw $t3,100($sp)#load variablelength
subu $t2,$t3,$s0##TMP42 = length - mid

sw $t1,-16($sp)
move $a0,$t1
sw $s0,-12($sp)
move $a1,$s0
sw $t0,-8($sp)
move $a2,$t0
sw $t2,-4($sp)
move $a3,$t2
addiu $sp,$sp,-172
jal merge
lw $s0,60($sp)
lw $s1,64($sp)
lw $s2,68($sp)
lw $s3,72($sp)
lw $s4,76($sp)
lw $s5,80($sp)
lw $s6,84($sp)
lw $s7,88($sp)
lw $ra,92($sp)
addiu $sp,$sp,104
jr $ra
main:
addiu $sp,$sp,-32
la $a0,string$3
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
li $v0,5
syscall
move $s0,$v0
li $s1,0
label$17:
lw $t0,16($sp)#load variable#TMP43
slt $t0,$s1,$s0#_label17: #TMP43 = i < n

blez $t0,label$18#BZ #TMP43 _label18

li $v0,5
syscall
move $s2,$v0
lw $t0,4($sp)#load variable#TMP95
move $t0,$s1##TMP95=i

li $t1,1# load immediate1
addu $s1,$t0,$t1#i = #TMP95 + 1

sll $t2,$t0,2
sw $s2,arr($t2)
#arr[#TMP95] =a

j label$17#GOTO _label17

label$18:
li $t0,0# load immediate0
sw $t0,-8($sp)
move $a0,$t0
sw $s0,-4($sp)
move $a1,$s0
addiu $sp,$sp,-104
jal inner_merge_sort
la $a0,string$4
li $v0,4
syscall #printstring
move $a0,$s0
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
li $s1,0
label$19:
lw $t0,12($sp)#load variable#TMP44
slt $t0,$s1,$s0#_label19: #TMP44 = i < n

blez $t0,label$20#BZ #TMP44 _label20

lw $t0,0($sp)#load variable#TMP103
move $t0,$s1##TMP103=i

li $t1,1# load immediate1
addu $s1,$t0,$t1#i = #TMP103 + 1

lw $t2,8($sp)#load variable#TMP45
sll $t3,$t0,2
lw $t2,arr($t3)
##TMP45 = arr [ #TMP103 ] 

move $a0,$t2
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
j label$19#GOTO _label19

label$20:
nop
