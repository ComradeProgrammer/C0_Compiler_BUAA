.data:
string$0: .asciiz "x = "
string$1: .asciiz "y = "
string$2: .asciiz "SWAP x = "
string$3: .asciiz "SWAP y = "
string$4: .asciiz "OVERFLOW!"
string$5: .asciiz "complete number: "
string$6: .asciiz "  "
string$7: .asciiz " "
string$8: .asciiz "---------------------------------------------------------------"
string$9: .asciiz "'water flower'number is:"
string$10: .asciiz "  "
string$11: .asciiz " "
string$12: .asciiz "---------------------------------------------------------------"
string$13: .asciiz " "
string$14: .asciiz " "
string$15: .asciiz "The total is "
string$16: .asciiz "5 != "
.align 2
MAX_NUM: .word 128
.text:
jal main
factorial:
sw $ra,48($sp)#save the return value
sle $t0,$a0,1##TMP2 = n <= 1   active[-2 2 ]

blez $t0,label$2#BZ #TMP2 _label2   active[2 ]

li $v0,1
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret 1   active[2 ]

label$2:
subiu $t0,$a0,1#_label2: #TMP3 = n - 1   active[-3 2 ]

sw $a0,52($sp)
move $a0,$t0
sw $t0,-4($sp)
addiu $sp,$sp,-56
jal factorial
lw $a0,52($sp)
#call factorial   active[2 ]

move $t0,$v0##TMP4=RET   active[-4 2 ]

mul $t1,$a0,$t0##TMP5 = n * #TMP4   active[-5 ]

move $v0,$t1
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret #TMP5   active[]

mod:
sw $ra,40($sp)#save the return value
div $a0,$a1
mflo $t0##TMP6 = x / y   active[-6 4 5 ]

mul $t1,$t0,$a1##TMP7 = #TMP6 * y   active[-7 4 ]

subu $a0,$a0,$t1#x = x - #TMP7   active[4 ]

move $v0,$a0
lw $ra,40($sp)
addiu $sp,$sp,52
jr $ra
#ret x   active[]

swap:
sw $ra,36($sp)#save the return value
sw $a0,40($sp)
la $a0,string$0
li $v0,4
syscall #printstring
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
lw $a0,40($sp)
li $v0,1
syscall #printint
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
li $a0,10
li $v0,11
syscall #printchar
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
la $a0,string$1
li $v0,4
syscall #printstring
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
move $a0,$a1
li $v0,1
syscall #printint
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
li $a0,10
li $v0,11
syscall #printchar
lw $a0,40($sp)	#load variable x
lw $t0,0($sp)	#load variabletemp
lw $t0,40($sp)#temp=x   active[8 9 ]

lw $a0,40($sp)	#load variable x
move $a0,$a1#x=y   active[7 9 ]

sw $a0,40($sp)
la $a0,string$2
li $v0,4
syscall #printstring
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
lw $a0,40($sp)
li $v0,1
syscall #printint
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
li $a0,10
li $v0,11
syscall #printchar
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
la $a0,string$3
li $v0,4
syscall #printstring
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
move $a0,$t0
li $v0,1
syscall #printint
lw $a0,40($sp)	#load variable x
sw $a0,40($sp)
li $a0,10
li $v0,11
syscall #printchar
lw $a0,40($sp)	#load variable x
lw $ra,36($sp)
addiu $sp,$sp,48
jr $ra
#ret    active[]

full_num:
sw $ra,48($sp)#save the return value
li $t1,100	# load immediate 100
mul $t0,$a0,$t1##TMP9 = n * 100   active[-9 12 13 ]

li $t3,10	# load immediate 10
mul $t2,$a1,$t3##TMP10 = j * 10   active[-10 -9 13 ]

addu $t4,$t0,$t2##TMP11 = #TMP9 + #TMP10   active[-11 13 ]

addu $t5,$t4,$a2##TMP12 = #TMP11 + a   active[-12 ]

move $v0,$t5
lw $ra,48($sp)
addiu $sp,$sp,64
jr $ra
#ret #TMP12   active[]

flower_num:
sw $ra,64($sp)#save the return value
mul $t0,$a0,$a0##TMP13 = n * n   active[-13 15 16 17 ]

mul $t1,$t0,$a0##TMP14 = #TMP13 * n   active[-14 16 17 ]

mul $t2,$a1,$a1##TMP15 = j * j   active[-15 -14 16 17 ]

mul $t3,$t2,$a1##TMP16 = #TMP15 * j   active[-16 -14 17 ]

addu $t4,$t1,$t3##TMP17 = #TMP14 + #TMP16   active[-17 17 ]

mul $t5,$a2,$a2##TMP18 = a * a   active[-18 -17 17 ]

mul $t6,$t5,$a2##TMP19 = #TMP18 * a   active[-19 -17 ]

addu $t7,$t4,$t6##TMP20 = #TMP17 + #TMP19   active[-20 ]

move $v0,$t7
lw $ra,64($sp)
addiu $sp,$sp,80
jr $ra
#ret #TMP20   active[]

complete_flower_num:
sw $ra,780($sp)#save the return value
sw $s0,748($sp)
sw $s1,752($sp)
sw $s2,756($sp)
sw $s3,760($sp)
sw $s4,764($sp)
li $s1,2
label$3:
slti $t0,$s1,128#_label3: #TMP21 = j < 128   active[-21 19 21 ]

blez $t0,label$4#BZ #TMP21 _label4   active[19 21 ]

li $s0,1
li $s2,-1
move $s3,$s1#s=j   active[19 20 21 22 23 ]

label$5:
slt $t0,$s0,$s1#_label5: #TMP22 = i < j   active[-22 19 20 21 22 23 ]

blez $t0,label$6#BZ #TMP22 _label6   active[19 20 21 22 23 ]

div $s1,$s0
mflo $t0##TMP23 = j / i   active[19 20 21 22 23 ]

div $s1,$s0
mflo $t1##TMP29 = j / i   active[-29 19 20 21 22 23 ]

mul $t2,$t1,$s0##TMP30 = #TMP29 * i   active[-30 19 20 21 22 23 ]

subu $t3,$s1,$t2##TMP27 = j - #TMP30   active[-27 19 20 21 22 23 ]

seq $t4,$t3,0##TMP31 = #TMP27 == 0   active[-31 19 20 21 22 23 ]

blez $t4,label$7#BZ #TMP31 _label7   active[19 20 21 22 23 ]

addiu $s2,$s2,1#n = n + 1   active[19 20 21 22 23 ]

subu $s3,$s3,$s0#s = s - i   active[19 20 21 22 23 ]

sge $t0,$s2,128##TMP34 = n >= 128   active[-34 19 20 21 22 23 ]

blez $t0,label$8#BZ #TMP34 _label8   active[19 20 21 22 23 ]

sw $a0,68($sp)
la $a0,string$4
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
j label$7#GOTO _label7   active[19 20 21 22 23 ]

label$8:
sll $t0,$s2,2
addu $t0,$t0,$sp
sw $s0,180($t0)#_label8: k[n] =i   active[19 20 21 22 23 ]

label$7:
addiu $s0,$s0,1#_label7: i = i + 1   active[19 20 21 22 23 ]

j label$5#GOTO _label5   active[19 20 21 22 23 ]

label$6:
seq $t0,$s3,0#_label6: #TMP35 = s == 0   active[-35 19 21 22 ]

blez $t0,label$10#BZ #TMP35 _label10   active[19 21 22 ]

la $a0,string$5
li $v0,4
syscall #printstring
move $a0,$s1
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
li $s0,0
label$11:
sle $t0,$s0,$s2#_label11: #TMP36 = i <= n   active[-36 19 20 21 22 ]

blez $t0,label$12#BZ #TMP36 _label12   active[19 20 21 22 ]

la $a0,string$6
li $v0,4
syscall #printstring
sll $t1,$s0,2
addu $t1,$t1,$sp
lw $t0,180($t1)##TMP37 = k [ i ]    active[-37 19 20 21 22 ]

move $a0,$t0
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
addiu $s0,$s0,1#i = i + 1   active[19 20 21 22 ]

j label$11#GOTO _label11   active[19 20 21 22 ]

label$12:
la $a0,string$7
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
label$10:
addiu $s1,$s1,1#_label10: j = j + 1   active[19 21 ]

j label$3#GOTO _label3   active[19 21 ]

label$4:
la $a0,string$8
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
la $a0,string$9
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
li $s0,100
li $s1,0
label$13:
li $t1,100	# load immediate 100
addiu $t0,$t1,128#_label13: #TMP38 = 100 + 128   active[-38 19 20 25 ]

slt $t2,$s0,$t0##TMP39 = i < #TMP38   active[-39 19 20 25 ]

blez $t2,label$14#BZ #TMP39 _label14   active[19 20 25 ]

li $t0,100	# load immediate 100
div $s0,$t0
mflo $s2#n = i / 100   active[19 20 22 25 ]

li $t2,10	# load immediate 10
div $s0,$t2
mflo $t1##TMP41 = i / 10   active[-41 19 20 22 25 ]

li $t4,10	# load immediate 10
div $t1,$t4
mflo $t3##TMP46 = #TMP41 / 10   active[-46 -41 19 20 22 25 ]

li $t6,10	# load immediate 10
mul $t5,$t3,$t6##TMP47 = #TMP46 * 10   active[-47 -41 19 20 22 25 ]

subu $t7,$t1,$t5##TMP44 = #TMP41 - #TMP47   active[-44 19 20 22 25 ]

li $t9,10	# load immediate 10
div $s0,$t9
mflo $t8##TMP52 = i / 10   active[-52 -44 19 20 22 25 ]

li $t3,10	# load immediate 10
mul $t1,$t8,$t3##TMP53 = #TMP52 * 10   active[-53 -44 19 20 22 25 ]

subu $t5,$s0,$t1##TMP50 = i - #TMP53   active[-50 -44 19 20 22 25 ]

li $t8,100	# load immediate 100
mul $t1,$s2,$t8##TMP59 = n * 100   active[-59 -50 -44 19 20 22 25 ]

sw $t1,96($sp)#write back temporary variable #TMP59
li $t1,10	# load immediate 10
mul $t0,$t7,$t1##TMP60 = #TMP44 * 10   active[-60 -59 -50 -44 19 20 22 25 ]

lw $t2,96($sp)	#load variable#TMP59
addu $t1,$t2,$t0##TMP61 = #TMP59 + #TMP60   active[-61 -50 -44 19 20 22 25 ]

addu $t0,$t1,$t5##TMP62 = #TMP61 + #TMP50   active[-62 -50 -44 19 20 22 25 ]

mul $t1,$s2,$s2##TMP68 = n * n   active[-68 -62 -50 -44 19 20 22 25 ]

mul $t2,$t1,$s2##TMP69 = #TMP68 * n   active[-69 -62 -50 -44 19 20 25 ]

mul $t1,$t7,$t7##TMP70 = #TMP44 * #TMP44   active[-70 -69 -62 -50 -44 19 20 25 ]

sw $t0,84($sp)#write back temporary variable #TMP62
mul $t0,$t1,$t7##TMP71 = #TMP70 * #TMP44   active[-71 -69 -62 -50 19 20 25 ]

addu $t1,$t2,$t0##TMP72 = #TMP69 + #TMP71   active[-72 -62 -50 19 20 25 ]

mul $t0,$t5,$t5##TMP73 = #TMP50 * #TMP50   active[-73 -72 -62 -50 19 20 25 ]

mul $t2,$t0,$t5##TMP74 = #TMP73 * #TMP50   active[-74 -72 -62 19 20 25 ]

addu $t0,$t1,$t2##TMP75 = #TMP72 + #TMP74   active[-75 -62 19 20 25 ]

lw $t2,84($sp)	#load variable#TMP62
seq $t1,$t2,$t0##TMP76 = #TMP62 == #TMP75   active[-76 19 20 25 ]

blez $t1,label$15#BZ #TMP76 _label15   active[19 20 25 ]

sll $t0,$s1,2
addu $t0,$t0,$sp
sw $s0,180($t0)#k[y] =i   active[19 20 25 ]

addiu $s1,$s1,1#y = y + 1   active[19 20 25 ]

label$15:
addiu $s0,$s0,1#_label15: i = i + 1   active[19 20 25 ]

j label$13#GOTO _label13   active[19 20 25 ]

label$14:
li $s0,0
label$16:
slt $t0,$s0,$s1#_label16: #TMP78 = i < y   active[-78 19 20 25 ]

blez $t0,label$17#BZ #TMP78 _label17   active[19 20 25 ]

la $a0,string$10
li $v0,4
syscall #printstring
sll $t1,$s0,2
addu $t1,$t1,$sp
lw $t0,180($t1)##TMP79 = k [ i ]    active[-79 19 20 25 ]

move $a0,$t0
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
addiu $s0,$s0,1#i = i + 1   active[19 20 25 ]

j label$16#GOTO _label16   active[19 20 25 ]

label$17:
la $a0,string$11
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
la $a0,string$12
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
li $s1,2
li $s3,0
li $s4,1
label$18:
sle $t0,$s1,128#_label18: #TMP80 = m <= 128   active[-80 26 28 29 ]

blez $t0,label$19#BZ #TMP80 _label19   active[26 28 29 ]

li $t0,2	# load immediate 2
div $s1,$t0
mflo $s2#k2 = m / 2   active[26 27 28 29 ]

li $s0,2
label$20:
sle $t0,$s0,$s2#_label20: #TMP82 = i <= k2   active[-82 20 26 27 28 29 ]

blez $t0,label$21#BZ #TMP82 _label21   active[20 26 27 28 29 ]

div $s1,$s0
mflo $t0##TMP83 = m / i   active[20 26 27 28 29 ]

div $s1,$s0
mflo $t1##TMP89 = m / i   active[-89 20 26 27 28 29 ]

mul $t2,$t1,$s0##TMP90 = #TMP89 * i   active[-90 20 26 27 28 29 ]

subu $t3,$s1,$t2##TMP87 = m - #TMP90   active[-87 20 26 27 28 29 ]

seq $t4,$t3,0##TMP91 = #TMP87 == 0   active[-91 20 26 27 28 29 ]

blez $t4,label$22#BZ #TMP91 _label22   active[20 26 27 28 29 ]

li $s4,0
label$22:
addiu $s0,$s0,1#_label22: i = i + 1   active[20 26 27 28 29 ]

j label$20#GOTO _label20   active[20 26 27 28 29 ]

label$21:
seq $t0,$s4,1#_label21: #TMP92 = leap == 1   active[-92 26 28 ]

blez $t0,label$23#BZ #TMP92 _label23   active[26 28 ]

la $a0,string$13
li $v0,4
syscall #printstring
move $a0,$s1
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
addiu $s3,$s3,1#h = h + 1   active[26 28 ]

li $t1,10	# load immediate 10
div $s3,$t1
mflo $t0##TMP94 = h / 10   active[-94 26 28 ]

lw $t2,740($sp)	#load variablex2
li $t3,10	# load immediate 10
mul $t2,$t0,$t3#x2 = #TMP94 * 10   active[26 28 30 ]

seq $t4,$t2,$s3##TMP96 = x2 == h   active[-96 26 28 ]

blez $t4,label$23#BZ #TMP96 _label23   active[26 28 ]

la $a0,string$14
li $v0,4
syscall #printstring
li $a0,10
li $v0,11
syscall #printchar
label$23:
addiu $s1,$s1,1#_label23: m = m + 1   active[26 28 ]

li $s4,1
j label$18#GOTO _label18   active[26 28 29 ]

label$19:
la $a0,string$15
li $v0,4
syscall #printstring
move $a0,$s3
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
lw $s0,748($sp)
lw $s1,752($sp)
lw $s2,756($sp)
lw $s3,760($sp)
lw $s4,764($sp)
lw $ra,780($sp)
addiu $sp,$sp,784
jr $ra
#ret    active[]

main:
addiu $sp,$sp,-4
li $t0,5	# load immediate 5
move $a0,$t0
sw $t0,-4($sp)
sw $a1,72($sp)
sw $a2,76($sp)
addiu $sp,$sp,-56
jal factorial
lw $a1,72($sp)
lw $a2,76($sp)
#call factorial   active[]

lw $t0,0($sp)	#load variablen
move $t0,$v0#n=RET   active[35 ]

la $a0,string$16
li $v0,4
syscall #printstring
move $a0,$t0
li $v0,1
syscall #printint
li $a0,10
li $v0,11
syscall #printchar
li $t1,5	# load immediate 5
move $a0,$t1
sw $t1,-8($sp)
li $t2,10	# load immediate 10
sw $a1,72($sp)
move $a1,$t2
sw $t2,-4($sp)
sw $a2,76($sp)
addiu $sp,$sp,-48
jal swap
lw $a1,72($sp)
lw $a2,76($sp)
#call swap   active[]

sw $a1,72($sp)
sw $a2,76($sp)
addiu $sp,$sp,-784
jal complete_flower_num
lw $a1,72($sp)
lw $a2,76($sp)
#call complete_flower_num   active[]

