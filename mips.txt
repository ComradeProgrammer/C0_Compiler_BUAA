.data:
string$0: .asciiz "the prime factors of "
string$1: .asciiz "input the number"
.align 2
x: .space 4
.text:
jal main
mod:
sw $ra,40($sp)#save the return value
div $a0,$a1
mfhi $t0
##TMP4 = x mod y

move $v0,$t0
lw $ra,40($sp)
addiu $sp,$sp,52
jr $ra
#ret #TMP4

isPrime:
sw $ra,48($sp)#save the return value
sw $s0,16($sp)
li $t0,2	# load immediate 2
bne $a0,$t0,label$2
##TMP5 = x == 2

#BZ #TMP5 _label2

li $v0,1
lw $s0,16($sp)
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret 1

j label$3#GOTO _label3

label$2:
li $s0,3
j label$5#GOTO _label5

label$4:
div $a0,$s0
mfhi $t0
#_label4: #TMP7 = x mod i

bne $t0,$0,label$6#BNZ #TMP7 _label6

li $v0,0
lw $s0,16($sp)
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret 0

label$6:
addiu $s0,$s0,1#_label6: i = i + 1

label$5:
slt $t0,$s0,$a0#_label5: #TMP6 = i < x

bne $t0,$0,label$4#BNZ #TMP6 _label4

label$3:
li $v0,1
lw $s0,16($sp)
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#_label3: ret 1

fenjie:
sw $ra,52($sp)#save the return value
sw $s0,20($sp)
sw $s1,24($sp)
move $3,$a0
la $a0,string$0
li $v0,4
syscall #printstring
move $a0,$3
# syscall-4 the prime factors of 

move $3,$a0
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 x

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

li $s0,1
li $s1,2
j label$8#GOTO _label8

label$7:
li $t0,1	# load immediate 1
bne $a0,$t0,label$9
#_label7: #TMP14 = x == 1

#BZ #TMP14 _label9

lw $s0,20($sp)
lw $s1,24($sp)
lw $ra,52($sp)
addiu $sp,$sp,60
jr $ra
#ret 

label$9:
sw $a0,56($sp)
move $a0,$s1
sw $s1,-4($sp)
addiu $sp,$sp,-56
jal isPrime
lw $a0,56($sp)
#call isPrime

move $t0,$v0##TMP15=RET

beq $t0,$0,label$10#BZ #TMP15 _label10

div $a0,$s1
mfhi $t0
##TMP16 = x mod i

bne $t0,$0,label$11#BNZ #TMP16 _label11

move $3,$a0
move $a0,$s1
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 i

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

div $a0,$s1
mflo $a0#x = x / i

li $s1,2
j label$12#GOTO _label12

label$11:
addiu $s1,$s1,1#_label11: i = i + 1

label$12:
j label$8#_label12: GOTO _label8

label$10:
addiu $s1,$s1,1#_label10: i = i + 1

label$8:
bne $s0,$0,label$7#_label8: BNZ loop _label7

lw $s0,20($sp)
lw $s1,24($sp)
lw $ra,52($sp)
addiu $sp,$sp,60
jr $ra
#ret 

main:
addiu $sp,$sp,-8
lw $t0,x	#load global variable x
li $t0,0
sw $t0,x#write back global variable x
j label$15#GOTO _label15

label$14:
la $a0,string$1
li $v0,4
syscall #printstring
# _label14: syscall-4 input the number

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

lw $t0,x	#load global variable x
li $v0,5
syscall
move $t0,$v0
sw $t0,x#write back global variable x
lw $t0,x	#load global variable x
li $t1,-1	# load immediate -1
beq $t0,$t1,label$15
##TMP27 = x != -1

#BZ #TMP27 _label15

lw $t0,x	#load global variable x
move $a0,$t0
sw $t0,-4($sp)
sw $t0,x#write back global variable x
addiu $sp,$sp,-60
jal fenjie
#call fenjie

label$15:
lw $t0,x	#load global variable x
li $t1,-1	# load immediate -1
bne $t0,$t1,label$14
#_label15: #TMP26 = x != -1

#BNZ #TMP26 _label14

