.data:
string$0: .asciiz "x = "
string$1: .asciiz "y = "
string$2: .asciiz "SWAP x = "
string$3: .asciiz "SWAP y = "
string$4: .asciiz "OVERFLOW!"
string$5: .asciiz "complete number: "
string$6: .asciiz "  "
string$7: .asciiz " "
string$8: .asciiz "---------------------------------------------------------------"
string$9: .asciiz "'water flower'number is:"
string$10: .asciiz "  "
string$11: .asciiz " "
string$12: .asciiz "---------------------------------------------------------------"
string$13: .asciiz " "
string$14: .asciiz " "
string$15: .asciiz "The total is "
string$16: .asciiz "5 != "
.align 2
MAX_NUM: .word 128
.text:
jal main
factorial:
sw $ra,48($sp)#save the return value
sle $t0,$a0,1##TMP2 = n <= 1

beq $t0,$0,label$2#BZ #TMP2 _label2

li $v0,1
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret 1

label$2:
subiu $t0,$a0,1#_label2: #TMP3 = n - 1

sw $a0,52($sp)
move $a0,$t0
sw $t0,-4($sp)
addiu $sp,$sp,-56
jal factorial
lw $a0,52($sp)
#call factorial

move $t0,$v0##TMP4=RET

mul $t1,$a0,$t0##TMP5 = n * #TMP4

move $v0,$t1
lw $ra,48($sp)
addiu $sp,$sp,56
jr $ra
#ret #TMP5

mod:
sw $ra,32($sp)#save the return value
div $a0,$a1
mfhi $a0
#x = x mod y

move $v0,$a0
lw $ra,32($sp)
addiu $sp,$sp,44
jr $ra
#ret x

swap:
sw $ra,36($sp)#save the return value
move $3,$a0
la $a0,string$0
li $v0,4
syscall #printstring
move $a0,$3
# syscall-4 x = 

move $3,$a0
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 x

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

move $3,$a0
la $a0,string$1
li $v0,4
syscall #printstring
move $a0,$3
# syscall-4 y = 

move $3,$a0
move $a0,$a1
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 y

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

move $t0,$a0#temp=x

move $a0,$a1#x=y

move $3,$a0
la $a0,string$2
li $v0,4
syscall #printstring
move $a0,$3
# syscall-4 SWAP x = 

move $3,$a0
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 x

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

move $3,$a0
la $a0,string$3
li $v0,4
syscall #printstring
move $a0,$3
# syscall-4 SWAP y = 

move $3,$a0
move $a0,$t0
li $v0,1
syscall #printint
move $a0,$3
# syscall-1 temp

move $3,$a0
li $a0,10
li $v0,11
syscall #printchar
move $a0,$3
# syscall-11 10

lw $ra,36($sp)
addiu $sp,$sp,48
jr $ra
#ret 

full_num:
sw $ra,48($sp)#save the return value
mul $t0,$a0,100##TMP9 = n * 100

mul $t1,$a1,10##TMP10 = j * 10

addu $t2,$t0,$t1##TMP11 = #TMP9 + #TMP10

addu $t3,$t2,$a2##TMP12 = #TMP11 + a

move $v0,$t3
lw $ra,48($sp)
addiu $sp,$sp,64
jr $ra
#ret #TMP12

flower_num:
sw $ra,64($sp)#save the return value
mul $t0,$a0,$a0##TMP13 = n * n

mul $t1,$t0,$a0##TMP14 = #TMP13 * n

mul $t2,$a1,$a1##TMP15 = j * j

mul $t3,$t2,$a1##TMP16 = #TMP15 * j

addu $t4,$t1,$t3##TMP17 = #TMP14 + #TMP16

mul $t5,$a2,$a2##TMP18 = a * a

mul $t6,$t5,$a2##TMP19 = #TMP18 * a

addu $t7,$t4,$t6##TMP20 = #TMP17 + #TMP19

move $v0,$t7
lw $ra,64($sp)
addiu $sp,$sp,80
jr $ra
#ret #TMP20

complete_flower_num:
sw $ra,732($sp)#save the return value
sw $s0,700($sp)
sw $s1,704($sp)
sw $s2,708($sp)
sw $s3,712($sp)
sw $s4,716($sp)
li $s1,2
j label$4#GOTO _label4

label$3:
li $s0,1
li $s2,-1
move $s3,$s1#s=j

j label$6#GOTO _label6

label$5:
div $s1,$s0
mfhi $t0
#_label5: #TMP25 = j mod i

bne $t0,$0,label$7#BNZ #TMP25 _label7

addiu $s2,$s2,1#n = n + 1

subu $s3,$s3,$s0#s = s - i

sge $t0,$s2,128##TMP33 = n >= 128

beq $t0,$0,label$8#BZ #TMP33 _label8

la $a0,string$4
li $v0,4
syscall #printstring
# syscall-4 OVERFLOW!

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

j label$7#GOTO _label7

label$8:
sll $t0,$s2,2
addu $t0,$t0,$sp
sw $s0,132($t0)#_label8: k[n] =i

label$7:
addiu $s0,$s0,1#_label7: i = i + 1

label$6:
slt $t0,$s0,$s1#_label6: #TMP22 = i < j

bne $t0,$0,label$5#BNZ #TMP22 _label5

bne $s3,$0,label$10#BNZ s _label10

la $a0,string$5
li $v0,4
syscall #printstring
# syscall-4 complete number: 

move $a0,$s1
li $v0,1
syscall #printint
# syscall-1 j

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

li $s0,0
j label$12#GOTO _label12

label$11:
la $a0,string$6
li $v0,4
syscall #printstring
# _label11: syscall-4   

sll $t1,$s0,2
addu $t1,$t1,$sp
lw $t0,132($t1)##TMP35 = k [ i ] 

move $a0,$t0
li $v0,1
syscall #printint
# syscall-1 #TMP35

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

addiu $s0,$s0,1#i = i + 1

label$12:
sle $t0,$s0,$s2#_label12: #TMP34 = i <= n

bne $t0,$0,label$11#BNZ #TMP34 _label11

la $a0,string$7
li $v0,4
syscall #printstring
# syscall-4  

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

label$10:
addiu $s1,$s1,1#_label10: j = j + 1

label$4:
slti $t0,$s1,128#_label4: #TMP21 = j < 128

bne $t0,$0,label$3#BNZ #TMP21 _label3

la $a0,string$8
li $v0,4
syscall #printstring
# syscall-4 ---------------------------------------------------------------

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$9
li $v0,4
syscall #printstring
# syscall-4 'water flower'number is:

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

li $s0,100
li $s1,0
j label$14#GOTO _label14

label$13:
li $t1,10	# load immediate 10
div $s0,$t1
mflo $t0#_label13: #TMP50 = i / 10

mul $t2,$t0,10##TMP51 = #TMP50 * 10

subu $t3,$s0,$t2##TMP63 = i - #TMP51

mul $t4,$t3,$t3##TMP71 = #TMP63 * #TMP63

mul $t5,$t4,$t3##TMP72 = #TMP71 * #TMP63

rem $t6,$t0,10##TMP64 = #TMP50 mod 10

mul $t7,$t6,$t6##TMP68 = #TMP64 * #TMP64

mul $t8,$t7,$t6##TMP69 = #TMP68 * #TMP64

li $t0,100	# load immediate 100
div $s0,$t0
mflo $t9##TMP65 = i / 100

mul $t2,$t9,$t9##TMP66 = #TMP65 * #TMP65

mul $t4,$t2,$t9##TMP67 = #TMP66 * #TMP65

addu $t2,$t4,$t8##TMP70 = #TMP67 + #TMP69

addu $t4,$t2,$t5##TMP73 = #TMP70 + #TMP72

mul $t2,$t6,10##TMP58 = #TMP64 * 10

mul $t5,$t9,100##TMP57 = #TMP65 * 100

addu $t6,$t5,$t2##TMP59 = #TMP57 + #TMP58

addu $t2,$t6,$t3##TMP60 = #TMP59 + #TMP63

bne $t2,$t4,label$15
##TMP74 = #TMP60 == #TMP73

#BZ #TMP74 _label15

sll $t0,$s1,2
addu $t0,$t0,$sp
sw $s0,132($t0)#k[y] =i

addiu $s1,$s1,1#y = y + 1

label$15:
addiu $s0,$s0,1#_label15: i = i + 1

label$14:
slti $t0,$s0,228#_label14: #TMP37 = i < 228

bne $t0,$0,label$13#BNZ #TMP37 _label13

li $s0,0
j label$17#GOTO _label17

label$16:
la $a0,string$10
li $v0,4
syscall #printstring
# _label16: syscall-4   

sll $t1,$s0,2
addu $t1,$t1,$sp
lw $t0,132($t1)##TMP77 = k [ i ] 

move $a0,$t0
li $v0,1
syscall #printint
# syscall-1 #TMP77

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

addiu $s0,$s0,1#i = i + 1

label$17:
slt $t0,$s0,$s1#_label17: #TMP76 = i < y

bne $t0,$0,label$16#BNZ #TMP76 _label16

la $a0,string$11
li $v0,4
syscall #printstring
# syscall-4  

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$12
li $v0,4
syscall #printstring
# syscall-4 ---------------------------------------------------------------

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

li $s1,2
li $s3,0
li $s4,1
j label$19#GOTO _label19

label$18:
li $t0,2	# load immediate 2
div $s1,$t0
mflo $s2#_label18: k2 = m / 2

li $s0,2
j label$21#GOTO _label21

label$20:
div $s1,$s0
mfhi $t0
#_label20: #TMP83 = m mod i

bne $t0,$0,label$22#BNZ #TMP83 _label22

li $s4,0
label$22:
addiu $s0,$s0,1#_label22: i = i + 1

label$21:
sle $t0,$s0,$s2#_label21: #TMP80 = i <= k2

bne $t0,$0,label$20#BNZ #TMP80 _label20

li $t0,1	# load immediate 1
bne $s4,$t0,label$23
##TMP89 = leap == 1

#BZ #TMP89 _label23

la $a0,string$13
li $v0,4
syscall #printstring
# syscall-4  

move $a0,$s1
li $v0,1
syscall #printint
# syscall-1 m

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

addiu $s3,$s3,1#h = h + 1

li $t1,10	# load immediate 10
div $s3,$t1
mflo $t0##TMP91 = h / 10

mul $t2,$t0,10#x2 = #TMP91 * 10

bne $t2,$s3,label$23
##TMP93 = x2 == h

#BZ #TMP93 _label23

la $a0,string$14
li $v0,4
syscall #printstring
# syscall-4  

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

label$23:
addiu $s1,$s1,1#_label23: m = m + 1

li $s4,1
label$19:
sle $t0,$s1,128#_label19: #TMP78 = m <= 128

bne $t0,$0,label$18#BNZ #TMP78 _label18

la $a0,string$15
li $v0,4
syscall #printstring
# syscall-4 The total is 

move $a0,$s3
li $v0,1
syscall #printint
# syscall-1 h

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

lw $s0,700($sp)
lw $s1,704($sp)
lw $s2,708($sp)
lw $s3,712($sp)
lw $s4,716($sp)
lw $ra,732($sp)
addiu $sp,$sp,736
jr $ra
#ret 

main:
addiu $sp,$sp,-4
li $t0,5	# load immediate 5
move $a0,$t0
sw $t0,-4($sp)
addiu $sp,$sp,-56
jal factorial
#call factorial

move $t0,$v0#n=RET

la $a0,string$16
li $v0,4
syscall #printstring
# syscall-4 5 != 

move $a0,$t0
li $v0,1
syscall #printint
# syscall-1 n

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$0
li $v0,4
syscall #printstring
# syscall-4 x = 

li $a0,5
li $v0,1
syscall #printint
# syscall-1 5

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$1
li $v0,4
syscall #printstring
# syscall-4 y = 

li $a0,10
li $v0,1
syscall #printint
# syscall-1 10

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$2
li $v0,4
syscall #printstring
# syscall-4 SWAP x = 

li $a0,10
li $v0,1
syscall #printint
# syscall-1 10

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

la $a0,string$3
li $v0,4
syscall #printstring
# syscall-4 SWAP y = 

li $a0,5
li $v0,1
syscall #printint
# syscall-1 5

li $a0,10
li $v0,11
syscall #printchar
# syscall-11 10

addiu $sp,$sp,-736
jal complete_flower_num
#call complete_flower_num

